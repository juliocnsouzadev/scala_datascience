package week3.lists

class Cons[T](val head: T, val tail: List[T]) extends List[T] {
  
  def isEmpty : Boolean = false
  
  def nth[T](n: Int): T = 
    nthInner(n, this) 
    
  private def nthInner[T](n: Int, xs: List[T]): T =  
    if (n == 0) xs.head
    else nthInner(n- 1, xs.tail) 
  
}

object nht {
 def nthInner[T](n: Int, xs: List[T]): T =  
    if (n == 0) xs.head
    else nthInner(n- 1, xs.tail)  
  
  
}