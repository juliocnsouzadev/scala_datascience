package week5

object Testing {

  def init[T](xs: List[T]): List[T] = xs match {
    case List()  => throw new Error("init of empty list")
    case List(x) => List()
    case y :: ys => y :: init(ys)
  }

  def removeAt[T](n: Int, xs: List[T]) = (xs take n) ::: (xs drop n + 1)

  removeAt(1, List('a', 'b', 'c', 'd'))

  def merge(xs: List[Int], ys: List[Int]): List[Int] =
    (xs, ys) match {
      case (Nil, Nil)    => Nil
      case (Nil, List()) => ys
      case (List(), Nil) => xs
      case (x :: xs1, y :: ys1) =>
      	if( x < y) x :: merge(xs1, ys)

    }
}