package br.com.juliocnsouza.spark.scala.spark_basics

import org.apache.spark._
import org.apache.spark.SparkContext._
import org.apache.log4j._
import scala.math.min
import scala.math.max

object MorePreciptations {
  
  
  def parseLine(line:String)= {
    val fields = line.split(",")
    val stationID = fields(0)
    val date = fields(1).toLong
    val preciptations = fields(3).toFloat
    (stationID, date, preciptations)
  }                                               //> parseLine: (line: String)(String, String, Float)

  /** Our main function where the action happens */
  def main(args: Array[String]) {
  
  // Set the log level to only print errors
    Logger.getLogger("org").setLevel(Level.ERROR)

    // Create a SparkContext using every core of the local machine
    val sc = new SparkContext("local[*]", "MinTemperatures")

    // Read each line of input data
    val lines = sc.textFile("../1800.csv")

		val parsedLines = lines filter(line => line contains ",PRCP,") map(parseLine) reduceByKey((x,y)=> max(x,y))
    
    parsedLines filter(value => value._2)
      
  }       
  
  
}