package week6

object Notes {
  val numbers = Vector(12, -10, 1, 9, 8, 5, 0, -7, 87, -99)
                                                  //> numbers  : List[Int] = List(12, -10, 1, 9, 8, 5, 0, -7, 87, -99)

  numbers filter (n => n > 0)                     //> res0: List[Int] = List(12, 1, 9, 8, 5, 87)
  numbers filterNot (n => n > 0)                  //> res1: List[Int] = List(-10, 0, -7, -99)
  numbers partition (n => n > 0)                  //> res2: (List[Int], List[Int]) = (List(12, 1, 9, 8, 5, 87),List(-10, 0, -7, -9
                                                  //| 9))
  numbers takeWhile (n => n > 0)                  //> res3: List[Int] = List(12)
  numbers dropWhile (n => n > 0)                  //> res4: List[Int] = List(-10, 1, 9, 8, 5, 0, -7, 87, -99)
  numbers span (n => n > 0)  
}